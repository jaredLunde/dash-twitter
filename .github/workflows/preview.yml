name: preview

on:
  pull_request:
    branches:
      - main

jobs:
  install:
    name: üèóÔ∏è Install and verify
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.14.3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --reporter=silent
      - name: ‚úÖ Check types
        run: pnpm check-types
      - name: üßπ Lint
        run: pnpm lint -- --quiet

  run-tests:
    name: "üß™ Test #${{ matrix.jobs_index }}"
    runs-on: ubuntu-latest
    needs: install
    strategy:
      # When one test job fails, DO NOT cancel the other containers
      fail-fast: false
      matrix:
        node-version: [16.x]
        # Runs in X jobs
        jobs_total: [1]
        jobs_index: [0, 1]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.14.3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Test
        env:
          JEST_JUNIT_SUITE_NAME: "Jest suite #${{ matrix.jobs_index }}"
          JEST_JUNIT_OUTPUT_NAME: junit.${{ matrix.jobs_index }}.xml
          JEST_JUNIT_OUTPUT_DIR: .test-results
          JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
        run: pnpm test -- --coverage --silent --maxWorkers=1 --jobsIndex=${{ matrix.jobs_index }} --jobsTotal=${{ matrix.jobs_total }}
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: .test-results/junit.${{ matrix.jobs_index }}.xml
      - name: Upload test coverage
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: coverage

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          # see: https://github.com/marketplace/actions/vercel-action#inputs
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}

  publish-tests:
    name: üì§ Publish test results
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: .jest
      - name: Merge test results
        run: npx junit-report-merger .jest/junit.xml ".jest/junit.*.xml"
      - name: Publish test results
        uses: dorny/test-reporter@v1
        with:
          name: üì• Test results
          token: ${{ secrets.GITHUB_TOKEN }}
          reporter: jest-junit
          path: .jest/junit.xml
          list-suites: "all"
          list-tests: "all"
          max-annotations: "50"
          fail-on-error: "true"
